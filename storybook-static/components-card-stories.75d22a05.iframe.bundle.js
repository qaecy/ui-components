"use strict";(self.webpackChunkui_components=self.webpackChunkui_components||[]).push([[294],{"./projects/cue-ui/src/lib/components/card.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Accent:()=>Accent,ButtonAutoStyle:()=>ButtonAutoStyle,ButtonsStyled:()=>ButtonsStyled,Default:()=>Default,FixedSize:()=>FixedSize,FixedSizeBorderLess:()=>FixedSizeBorderLess,NoTitle:()=>NoTitle,Outlined:()=>Outlined,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _card_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./projects/cue-ui/src/lib/components/card.component.ts"),_shared_colors__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/cue-ui/src/lib/shared/colors.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Card",component:_card_component__WEBPACK_IMPORTED_MODULE_0__.i,tags:["autodocs"],argTypes:{color:{control:{type:"select"},options:_shared_colors__WEBPACK_IMPORTED_MODULE_1__.bE},appearance:{control:{type:"select"},options:["outlined","raised"]},actionsAlign:{control:{type:"select"},options:["start","end"]},actionButtons:{description:"Array of action buttons"}}},Default={render:args=>({props:args,template:`<cue-card \n    style="font-family: var(--cue-font-family)"\n    title="${args.title}" \n    subTitle="${args.subTitle}"\n    color="${args.color}" \n    appearance="${args.appearance}">\n      Card content goes here\n    </cue-card>`}),args:{title:"Primary card",subTitle:"Subtitle",color:"primary",appearance:"raised"}},NoTitle={render:args=>({props:args,template:`<cue-card style="font-family: var(--cue-font-family)"\n      color="${args.color}" \n      appearance="${args.appearance}">\n        Card content goes here\n      </cue-card>`}),args:{color:"primary",appearance:"raised"}},Accent={args:{title:"Accent card",color:"accent",appearance:"raised"}},Outlined={args:{title:"Outlined card",color:"accent",appearance:"outlined"}},ButtonAutoStyle={args:{title:"Button card automatically styled",color:"accent",appearance:"raised",actionButtons:[{label:"Button 1",action:()=>console.log("Button 1 clicked")}],actionsAlign:"end"}},ButtonsStyled={args:{title:"Button card automatically styled",color:"accent",appearance:"raised",actionButtons:[{label:"Button 1",action:()=>console.log("Button 1 clicked"),color:"secondary",appearance:"stroked",loading:!0,disabled:!1,tooltip:"I'm loading",icon:"home"},{label:"Button 2",action:()=>console.log("Button 2 clicked"),color:"primary",appearance:"filled",loading:!1,failed:!0,tooltip:"Something went wrong"}],actionsAlign:"end"}},FixedSize={render:args=>({props:args,template:`<cue-card style="font-family: var(--cue-font-family)" height="${args.height}" width="${args.width}">\n      I'm 300px wide and 200px tall and I will stay that size no matter the content.\n      <img src="https://placehold.co/600x400" alt="Placeholder image" style="width: 100%; height: 100%; object-fit: cover; border-radius: 8px;" />\n    </cue-card>`}),args:{height:"200px",width:"300px"}},FixedSizeBorderLess={render:args=>({props:args,template:`<cue-card style="font-family: var(--cue-font-family)" height="${args.height}" width="${args.width}" [borderLess]="${args.borderLess}">\n      <img style="border-radius: var(--cue-card-border-radius)" src="https://placehold.co/${parseInt(args.width)}x${parseInt(args.height)}" alt="Placeholder image" style="width: 100%; height: 100%; object-fit: cover; border-radius: 8px;" />\n    </cue-card>`}),args:{height:"200px",width:"300px",borderLess:!0}},__namedExportsOrder=["Default","NoTitle","Accent","Outlined","ButtonAutoStyle","ButtonsStyled","FixedSize","FixedSizeBorderLess"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render,\n  args: {\n    title: 'Primary card',\n    subTitle: 'Subtitle',\n    color: \"primary\",\n    appearance: \"raised\"\n  }\n}",...Default.parameters?.docs?.source}}},NoTitle.parameters={...NoTitle.parameters,docs:{...NoTitle.parameters?.docs,source:{originalSource:'{\n  render: (args: any) => ({\n    props: args,\n    template: `<cue-card style="font-family: var(--cue-font-family)"\n      color="${args.color}" \n      appearance="${args.appearance}">\n        Card content goes here\n      </cue-card>`\n  }),\n  args: {\n    color: "primary",\n    appearance: "raised"\n  }\n}',...NoTitle.parameters?.docs?.source}}},Accent.parameters={...Accent.parameters,docs:{...Accent.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: \'Accent card\',\n    color: "accent",\n    appearance: "raised"\n  }\n}',...Accent.parameters?.docs?.source}}},Outlined.parameters={...Outlined.parameters,docs:{...Outlined.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: \'Outlined card\',\n    color: "accent",\n    appearance: "outlined"\n  }\n}',...Outlined.parameters?.docs?.source}}},ButtonAutoStyle.parameters={...ButtonAutoStyle.parameters,docs:{...ButtonAutoStyle.parameters?.docs,source:{originalSource:"{\n  args: {\n    title: 'Button card automatically styled',\n    color: \"accent\",\n    appearance: \"raised\",\n    actionButtons: [{\n      label: 'Button 1',\n      action: () => console.log('Button 1 clicked')\n    }],\n    actionsAlign: \"end\"\n  }\n}",...ButtonAutoStyle.parameters?.docs?.source}}},ButtonsStyled.parameters={...ButtonsStyled.parameters,docs:{...ButtonsStyled.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: \'Button card automatically styled\',\n    color: "accent",\n    appearance: "raised",\n    actionButtons: [{\n      label: \'Button 1\',\n      action: () => console.log(\'Button 1 clicked\'),\n      color: "secondary",\n      appearance: "stroked",\n      loading: true,\n      disabled: false,\n      tooltip: "I\'m loading",\n      icon: "home"\n    }, {\n      label: \'Button 2\',\n      action: () => console.log(\'Button 2 clicked\'),\n      color: "primary",\n      appearance: "filled",\n      loading: false,\n      failed: true,\n      tooltip: "Something went wrong"\n    }],\n    actionsAlign: "end"\n  }\n}',...ButtonsStyled.parameters?.docs?.source}}},FixedSize.parameters={...FixedSize.parameters,docs:{...FixedSize.parameters?.docs,source:{originalSource:'{\n  render: (args: any) => ({\n    props: args,\n    template: `<cue-card style="font-family: var(--cue-font-family)" height="${args.height}" width="${args.width}">\n      I\'m 300px wide and 200px tall and I will stay that size no matter the content.\n      <img src="https://placehold.co/600x400" alt="Placeholder image" style="width: 100%; height: 100%; object-fit: cover; border-radius: 8px;" />\n    </cue-card>`\n  }),\n  args: {\n    height: "200px",\n    width: "300px"\n  }\n}',...FixedSize.parameters?.docs?.source}}},FixedSizeBorderLess.parameters={...FixedSizeBorderLess.parameters,docs:{...FixedSizeBorderLess.parameters?.docs,source:{originalSource:'{\n  render: (args: any) => ({\n    props: args,\n    template: `<cue-card style="font-family: var(--cue-font-family)" height="${args.height}" width="${args.width}" [borderLess]="${args.borderLess}">\n      <img style="border-radius: var(--cue-card-border-radius)" src="https://placehold.co/${parseInt(args.width)}x${parseInt(args.height)}" alt="Placeholder image" style="width: 100%; height: 100%; object-fit: cover; border-radius: 8px;" />\n    </cue-card>`\n  }),\n  args: {\n    height: "200px",\n    width: "300px",\n    borderLess: true\n  }\n}',...FixedSizeBorderLess.parameters?.docs?.source}}}}}]);